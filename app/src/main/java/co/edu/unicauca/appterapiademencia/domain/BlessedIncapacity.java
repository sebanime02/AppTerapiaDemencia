package co.edu.unicauca.appterapiademencia.domain;

import org.greenrobot.greendao.annotation.*;

import co.edu.unicauca.appterapiademencia.domain.dao.DaoSession;
import org.greenrobot.greendao.DaoException;

import co.edu.unicauca.appterapiademencia.domain.dao.BlessedIncapacityDao;
import co.edu.unicauca.appterapiademencia.domain.dao.PatientDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit.

/**
 * Entity mapped to table "BLESSED_INCAPACITY".
 */
@Entity(active = true)
public class BlessedIncapacity {

    @Id(autoincrement = true)
    private Long id;
    private long patientId;
    private Double tareasdomesticas;
    private Double pequenasdinero;
    private Double listascortas;
    private Double orientarsecasa;
    private Double orientarsecalle;
    private Double valorarentorno;
    private Double recordarrecientes;
    private Double rememorarpasado;
    private Integer alimentacion;
    private Integer vestimenta;
    private Integer esfinteres;
    private Integer retraimientoconstante;
    private Integer egocentrismoaumentado;
    private Integer perdidainteressentimientos;
    private Integer afectividadembolatada;
    private Integer perturbacioncontrolemocional;
    private Integer hilaridadinapropiada;
    private Integer respuestaemocional;
    private Integer indiscrecionessexuales;
    private Integer faltainteresaficiones;
    private Integer disminucioniniciativaprogresiva;
    private Integer hiperactividadnojustificada;

    /** Used to resolve relations */
    @Generated
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    @Generated
    private transient BlessedIncapacityDao myDao;

    @ToOne(joinProperty = "patientId")
    private Patient patient;

    @Generated
    private transient Long patient__resolvedKey;

    @Generated
    public BlessedIncapacity() {
    }

    public BlessedIncapacity(Long id) {
        this.id = id;
    }

    @Generated
    public BlessedIncapacity(Long id, long patientId, Double tareasdomesticas, Double pequenasdinero, Double listascortas, Double orientarsecasa, Double orientarsecalle, Double valorarentorno, Double recordarrecientes, Double rememorarpasado, Integer alimentacion, Integer vestimenta, Integer esfinteres, Integer retraimientoconstante, Integer egocentrismoaumentado, Integer perdidainteressentimientos, Integer afectividadembolatada, Integer perturbacioncontrolemocional, Integer hilaridadinapropiada, Integer respuestaemocional, Integer indiscrecionessexuales, Integer faltainteresaficiones, Integer disminucioniniciativaprogresiva, Integer hiperactividadnojustificada) {
        this.id = id;
        this.patientId = patientId;
        this.tareasdomesticas = tareasdomesticas;
        this.pequenasdinero = pequenasdinero;
        this.listascortas = listascortas;
        this.orientarsecasa = orientarsecasa;
        this.orientarsecalle = orientarsecalle;
        this.valorarentorno = valorarentorno;
        this.recordarrecientes = recordarrecientes;
        this.rememorarpasado = rememorarpasado;
        this.alimentacion = alimentacion;
        this.vestimenta = vestimenta;
        this.esfinteres = esfinteres;
        this.retraimientoconstante = retraimientoconstante;
        this.egocentrismoaumentado = egocentrismoaumentado;
        this.perdidainteressentimientos = perdidainteressentimientos;
        this.afectividadembolatada = afectividadembolatada;
        this.perturbacioncontrolemocional = perturbacioncontrolemocional;
        this.hilaridadinapropiada = hilaridadinapropiada;
        this.respuestaemocional = respuestaemocional;
        this.indiscrecionessexuales = indiscrecionessexuales;
        this.faltainteresaficiones = faltainteresaficiones;
        this.disminucioniniciativaprogresiva = disminucioniniciativaprogresiva;
        this.hiperactividadnojustificada = hiperactividadnojustificada;
    }

    /** called by internal mechanisms, do not call yourself. */
    @Generated
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getBlessedIncapacityDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public long getPatientId() {
        return patientId;
    }

    public void setPatientId(long patientId) {
        this.patientId = patientId;
    }

    public Double getTareasdomesticas() {
        return tareasdomesticas;
    }

    public void setTareasdomesticas(Double tareasdomesticas) {
        this.tareasdomesticas = tareasdomesticas;
    }

    public Double getPequenasdinero() {
        return pequenasdinero;
    }

    public void setPequenasdinero(Double pequenasdinero) {
        this.pequenasdinero = pequenasdinero;
    }

    public Double getListascortas() {
        return listascortas;
    }

    public void setListascortas(Double listascortas) {
        this.listascortas = listascortas;
    }

    public Double getOrientarsecasa() {
        return orientarsecasa;
    }

    public void setOrientarsecasa(Double orientarsecasa) {
        this.orientarsecasa = orientarsecasa;
    }

    public Double getOrientarsecalle() {
        return orientarsecalle;
    }

    public void setOrientarsecalle(Double orientarsecalle) {
        this.orientarsecalle = orientarsecalle;
    }

    public Double getValorarentorno() {
        return valorarentorno;
    }

    public void setValorarentorno(Double valorarentorno) {
        this.valorarentorno = valorarentorno;
    }

    public Double getRecordarrecientes() {
        return recordarrecientes;
    }

    public void setRecordarrecientes(Double recordarrecientes) {
        this.recordarrecientes = recordarrecientes;
    }

    public Double getRememorarpasado() {
        return rememorarpasado;
    }

    public void setRememorarpasado(Double rememorarpasado) {
        this.rememorarpasado = rememorarpasado;
    }

    public Integer getAlimentacion() {
        return alimentacion;
    }

    public void setAlimentacion(Integer alimentacion) {
        this.alimentacion = alimentacion;
    }

    public Integer getVestimenta() {
        return vestimenta;
    }

    public void setVestimenta(Integer vestimenta) {
        this.vestimenta = vestimenta;
    }

    public Integer getEsfinteres() {
        return esfinteres;
    }

    public void setEsfinteres(Integer esfinteres) {
        this.esfinteres = esfinteres;
    }

    public Integer getRetraimientoconstante() {
        return retraimientoconstante;
    }

    public void setRetraimientoconstante(Integer retraimientoconstante) {
        this.retraimientoconstante = retraimientoconstante;
    }

    public Integer getEgocentrismoaumentado() {
        return egocentrismoaumentado;
    }

    public void setEgocentrismoaumentado(Integer egocentrismoaumentado) {
        this.egocentrismoaumentado = egocentrismoaumentado;
    }

    public Integer getPerdidainteressentimientos() {
        return perdidainteressentimientos;
    }

    public void setPerdidainteressentimientos(Integer perdidainteressentimientos) {
        this.perdidainteressentimientos = perdidainteressentimientos;
    }

    public Integer getAfectividadembolatada() {
        return afectividadembolatada;
    }

    public void setAfectividadembolatada(Integer afectividadembolatada) {
        this.afectividadembolatada = afectividadembolatada;
    }

    public Integer getPerturbacioncontrolemocional() {
        return perturbacioncontrolemocional;
    }

    public void setPerturbacioncontrolemocional(Integer perturbacioncontrolemocional) {
        this.perturbacioncontrolemocional = perturbacioncontrolemocional;
    }

    public Integer getHilaridadinapropiada() {
        return hilaridadinapropiada;
    }

    public void setHilaridadinapropiada(Integer hilaridadinapropiada) {
        this.hilaridadinapropiada = hilaridadinapropiada;
    }

    public Integer getRespuestaemocional() {
        return respuestaemocional;
    }

    public void setRespuestaemocional(Integer respuestaemocional) {
        this.respuestaemocional = respuestaemocional;
    }

    public Integer getIndiscrecionessexuales() {
        return indiscrecionessexuales;
    }

    public void setIndiscrecionessexuales(Integer indiscrecionessexuales) {
        this.indiscrecionessexuales = indiscrecionessexuales;
    }

    public Integer getFaltainteresaficiones() {
        return faltainteresaficiones;
    }

    public void setFaltainteresaficiones(Integer faltainteresaficiones) {
        this.faltainteresaficiones = faltainteresaficiones;
    }

    public Integer getDisminucioniniciativaprogresiva() {
        return disminucioniniciativaprogresiva;
    }

    public void setDisminucioniniciativaprogresiva(Integer disminucioniniciativaprogresiva) {
        this.disminucioniniciativaprogresiva = disminucioniniciativaprogresiva;
    }

    public Integer getHiperactividadnojustificada() {
        return hiperactividadnojustificada;
    }

    public void setHiperactividadnojustificada(Integer hiperactividadnojustificada) {
        this.hiperactividadnojustificada = hiperactividadnojustificada;
    }

    /** To-one relationship, resolved on first access. */
    @Generated
    public Patient getPatient() {
        long __key = this.patientId;
        if (patient__resolvedKey == null || !patient__resolvedKey.equals(__key)) {
            __throwIfDetached();
            PatientDao targetDao = daoSession.getPatientDao();
            Patient patientNew = targetDao.load(__key);
            synchronized (this) {
                patient = patientNew;
            	patient__resolvedKey = __key;
            }
        }
        return patient;
    }

    @Generated
    public void setPatient(Patient patient) {
        if (patient == null) {
            throw new DaoException("To-one property 'patientId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.patient = patient;
            patientId = patient.getId();
            patient__resolvedKey = patientId;
        }
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void delete() {
        __throwIfDetached();
        myDao.delete(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void update() {
        __throwIfDetached();
        myDao.update(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void refresh() {
        __throwIfDetached();
        myDao.refresh(this);
    }

    @Generated
    private void __throwIfDetached() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
    }

}
