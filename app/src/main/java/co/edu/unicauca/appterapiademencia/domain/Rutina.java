package co.edu.unicauca.appterapiademencia.domain;

import org.greenrobot.greendao.annotation.*;

import java.util.List;
import co.edu.unicauca.appterapiademencia.domain.dao.DaoSession;
import org.greenrobot.greendao.DaoException;

import co.edu.unicauca.appterapiademencia.domain.dao.ExerciseDao;
import co.edu.unicauca.appterapiademencia.domain.dao.RutinaDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit.

/**
 * Entity mapped to table "RUTINA".
 */
@Entity(active = true)
public class Rutina {

    @Id(autoincrement = true)
    private Long id;
    private long patientId;
    private Integer state;
    private String startername;
    private String datestart;
    private Integer mecinicial;
    private String mecinicialcomentario;
    private Integer mecfinal;
    private String mecfinalcomentario;

    /** Used to resolve relations */
    @Generated
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    @Generated
    private transient RutinaDao myDao;

    @ToMany(joinProperties = {
        @JoinProperty(name = "id", referencedName = "rutinaId")
    })
    private List<Exercise> exerciseList;

    @Generated
    public Rutina() {
    }

    public Rutina(Long id) {
        this.id = id;
    }

    @Generated
    public Rutina(Long id, long patientId, Integer state, String startername, String datestart, Integer mecinicial, String mecinicialcomentario, Integer mecfinal, String mecfinalcomentario) {
        this.id = id;
        this.patientId = patientId;
        this.state = state;
        this.startername = startername;
        this.datestart = datestart;
        this.mecinicial = mecinicial;
        this.mecinicialcomentario = mecinicialcomentario;
        this.mecfinal = mecfinal;
        this.mecfinalcomentario = mecfinalcomentario;
    }

    /** called by internal mechanisms, do not call yourself. */
    @Generated
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getRutinaDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public long getPatientId() {
        return patientId;
    }

    public void setPatientId(long patientId) {
        this.patientId = patientId;
    }

    public Integer getState() {
        return state;
    }

    public void setState(Integer state) {
        this.state = state;
    }

    public String getStartername() {
        return startername;
    }

    public void setStartername(String startername) {
        this.startername = startername;
    }

    public String getDatestart() {
        return datestart;
    }

    public void setDatestart(String datestart) {
        this.datestart = datestart;
    }

    public Integer getMecinicial() {
        return mecinicial;
    }

    public void setMecinicial(Integer mecinicial) {
        this.mecinicial = mecinicial;
    }

    public String getMecinicialcomentario() {
        return mecinicialcomentario;
    }

    public void setMecinicialcomentario(String mecinicialcomentario) {
        this.mecinicialcomentario = mecinicialcomentario;
    }

    public Integer getMecfinal() {
        return mecfinal;
    }

    public void setMecfinal(Integer mecfinal) {
        this.mecfinal = mecfinal;
    }

    public String getMecfinalcomentario() {
        return mecfinalcomentario;
    }

    public void setMecfinalcomentario(String mecfinalcomentario) {
        this.mecfinalcomentario = mecfinalcomentario;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    @Generated
    public List<Exercise> getExerciseList() {
        if (exerciseList == null) {
            __throwIfDetached();
            ExerciseDao targetDao = daoSession.getExerciseDao();
            List<Exercise> exerciseListNew = targetDao._queryRutina_ExerciseList(id);
            synchronized (this) {
                if(exerciseList == null) {
                    exerciseList = exerciseListNew;
                }
            }
        }
        return exerciseList;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    @Generated
    public synchronized void resetExerciseList() {
        exerciseList = null;
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void delete() {
        __throwIfDetached();
        myDao.delete(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void update() {
        __throwIfDetached();
        myDao.update(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void refresh() {
        __throwIfDetached();
        myDao.refresh(this);
    }

    @Generated
    private void __throwIfDetached() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
    }

}
